---
import { getEntries, type CollectionEntry } from "astro:content"
import SkillListItem from "@components/ui/SkillListItem.astro";
import Card from "@components/ui/Card.astro";
interface Props {
  project: CollectionEntry<'projects'>
}
const { project } = Astro.props;
const getTechStack = async () => {
  const res = await getEntries(project?.data?.techStack);
  const techStack = [...res].length > 0 ? [...res] : null;
  return techStack;
}
const techStackArr = await getTechStack();
const { title, description, image, links } = project.data;
---
<Card title={title}>
  <h3 class="project-title text-neutral-900 fs-700 fw-bold">{title}</h3>
    <img
      slot="image"
      class="mockup"
      src={image?.url}
      alt={image?.alt}
      loading="lazy"
      width="490"
      height="368"
    />
      <p class="project-description">
        {description}
      </p>
      <ul class="tech-list">
        {techStackArr?.map(tech => (
          tech ? <SkillListItem name={tech.data.name} label={tech.data.label} size={25} colour="var(--clr-neutral-900" /> : null
        ))}
      </ul>
    </div>
  </div>
  <!--.flex-container end-->
  <ul
    slot="footer"
    class="links-container"
  >
    {links.map(link => {
      if(link.label === "view live") {
        return (
          <a
            href={link.url}
            class="view-live-link fs-500"
            target="_blank"
            rel="noopener"
          >
            {link.label}
          </a>
        )
      }
      if(link.label === "code on github") {
        return (
          <a
            href={link.url}
            class="github-link fs-500"
            target="_blank"
            rel="noopener"
          >
            {link.label}
          </a>
        )
      }
      })}
    </ul>
    <!--.links-container end-->
</Card>
<style lang="scss">
  @use "../../sass/abstracts" as *;
    .flex-container {
      @include flex-column;
      align-items: center;
      width: 100%;
    }
    .project-title {
      width: 100%;
      border: none;
      z-index: 10;
      margin: 10px 0;
      width: 100%;
    };
    .project-description {
      margin-top: 10px;

      a {
        &:hover {
          text-decoration: underline;
        }

        &:visited {
          color: $purple-plum;
        }

        &:focus-visible {
          text-decoration: underline;
          outline-offset: 0.1rem;
          outline: 3px solid $blue-sapphire;
        }
      }
    }
    .tech-list {
      display: flex;
      justify-content: space-evenly;
      align-items: center;
      gap: 1rem;
      margin-top: 2em;
    }
    .tech-list-item {
      flex-basis: 24%;
    }
    .links-container {
      margin-top: 5px;
      flex-basis: 100%;
      display: flex;
      justify-content: space-between;
      gap: 3rem;
    }
    .view-live-link,
    .github-link {
      margin-top: 2rem;
      transition: 200ms ease-in-out;
      text-decoration: underline;
      padding: 10px 2px 5px 2px;

      &:hover,
      &:focus {
        font-weight: $bold;
        transform: scale(1.05);
      }
      &:focus-visible {
        outline: 3px solid $blue-sapphire;
        outline-offset: 0.5rem;
      }
    }
</style>
