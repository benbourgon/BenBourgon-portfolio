---
import { Image } from "astro:assets";
import type { RemoteImageProps } from "astro:assets";
import { Cloudinary } from "@cloudinary/url-gen";
import { CLOUDINARY_CLOUD_NAME } from "astro:env/server";
import imageNotFound from "@images/imageNotFoundSquare.svg";

const cld = new Cloudinary({
    cloud: {
        cloudName: CLOUDINARY_CLOUD_NAME,
    },
    url: {
        secure: true,
    },
});

type Props = RemoteImageProps & {
    height: number | `${number}`;
    width: number | `${number}`;
};

const { src, alt, height, width, ...props } = Astro.props;

if (!src) {
    throw new Error("CldImage component requires a src prop.");
}
const imageNotFoundSrc = imageNotFound.src;
const image = cld.image(src);
image.format("auto").quality("auto");
const imgSrc = image.toURL();
---

<Image
    alt={alt}
    width={width}
    height={height}
    loading="lazy"
    {...props}
    src={typeof imgSrc === "string" ? imgSrc : imageNotFoundSrc}
/>

<style>
    img {
        object-fit: cover;
        width: 100%;
    }
</style>
